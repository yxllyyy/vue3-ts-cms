{"version":3,"sources":["webpack:///./src/views/main/system/user/user.vue","webpack:///./src/views/main/system/user/config/search.config.ts","webpack:///./src/views/main/system/user/config/content.config.ts","webpack:///./src/views/main/system/user/config/modal.config.ts","webpack:///./src/hooks/use-page-search.ts","webpack:///./src/views/main/system/user/user.vue?a451","webpack:///./src/views/main/system/user/user.vue?d883","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["class","searchFormConfig","handleResetClick","handleQueryClick","ref","contentTableConfig","pageName","handleNewData","handleEditData","defaultInfo","modalConfig","modalConfigRef","labelWidth","itemStyle","padding","colLayout","span","formItems","field","type","label","placeholder","options","title","value","otherOptions","startPlaceholder","endPlaceholder","propList","prop","minWidth","slotName","showIndexColumn","showSelectColumn","isHidden","usePageSearch","PageContentRef","getPageData","queryInfo","name","components","PageSearch","PageContent","PageModal","setup","props","newCallback","passwordItem","find","item","editCallback","store","departmentItem","state","entireDepartment","map","id","roleItem","entireRole","pageModalRef","render","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","this","arguments","length","undefined"],"mappings":"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","file":"js/chunk-94f015a4.c5d8ebc7.js","sourcesContent":["<template>\n  <div class=\"user\">\n    <page-search\n      :searchFormConfig=\"searchFormConfig\"\n      @resetBtnClick=\"handleResetClick\"\n      @queryBtnClick=\"handleQueryClick\"\n    />\n    <page-content\n      ref=\"PageContentRef\"\n      :contentTableConfig=\"contentTableConfig\"\n      pageName=\"users\"\n      @newBtnClck=\"handleNewData\"\n      @editBtnClick=\"handleEditData\"\n    ></page-content>\n    <page-modal\n      :defaultInfo=\"defaultInfo\"\n      ref=\"pageModalRef\"\n      pageName=\"users\"\n      :modalConfig=\"modalConfigRef\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { useStore } from '@/store'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/use-page-search'\nimport { usePageModal } from '@/hooks/use-page-modal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup(props) {\n    // 拿到重置/搜索按钮的方法\n    const [PageContentRef, handleResetClick, handleQueryClick] = usePageSearch()\n\n    // pageModal相关的hook逻辑\n    // 处理密码的逻辑\n    const newCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = false\n    }\n    const editCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加部门和角色列表\n    const store = useStore()\n    // 让modalConfig变成一个可响应式的对象\n    const modalConfigRef = computed(() => {\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      return modalConfig\n    })\n    // 3.调用hook获取公共变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallback, editCallback)\n\n    return {\n      PageContentRef,\n      searchFormConfig,\n      contentTableConfig,\n      handleResetClick,\n      handleQueryClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n</script>\n\n<style scoped></style>\n","import { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  labelWidth: '120px',\n  itemStyle: {\n    padding: '20px 40px'\n  },\n  colLayout: {\n    span: 8\n  },\n  formItems: [\n    {\n      field: 'id',\n      type: 'input',\n      label: 'id',\n      placeholder: '请输入id'\n    },\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'enable',\n      type: 'select',\n      label: '用户状态',\n      placeholder: '请输入用户状态',\n      options: [\n        { title: '启用', value: 1 },\n        { title: '禁用', value: 0 }\n      ]\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      otherOptions: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        type: 'daterange' //可以选择时间的范围\n      }\n    }\n  ]\n}\n","//数据\nexport const contentTableConfig = {\n  title: '用户列表',\n  propList: [\n    { prop: 'name', label: '用户名', minWidth: '80' },\n    { prop: 'realname', label: '真实姓名', minWidth: '80' },\n    { prop: 'cellphone', label: '手机号码', minWidth: '80' },\n    { prop: 'enable', label: '状态', minWidth: '80', slotName: 'status' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '200',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '200',\n      slotName: 'updateAt'\n    },\n    {\n      label: '操作',\n      minWidth: '120',\n      slotName: 'handler'\n    }\n  ],\n  // 是否显示序号\n  showIndexColumn: true,\n  //是否显示checkbox\n  showSelectColumn: true\n}\n","import { IForm } from '@/base-ui/form'\nexport const modalConfig: IForm = {\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '用户名',\n      placeholder: '请输入用户名'\n    },\n    {\n      field: 'realname',\n      type: 'input',\n      label: '真实姓名',\n      placeholder: '请输入真实姓名'\n    },\n    {\n      field: 'password',\n      type: 'password',\n      label: '密码',\n      placeholder: '请输入密码',\n      isHidden: false\n    },\n    {\n      field: 'cellphone',\n      type: 'input',\n      label: '电话号码',\n      placeholder: '请输入电话号码'\n    },\n    {\n      field: 'departmentId',\n      type: 'select',\n      label: '选择部门',\n      placeholder: '请输入选择部门',\n      options: []\n    },\n    {\n      field: 'roleId',\n      type: 'select',\n      label: '选择角色',\n      placeholder: '请输入选择角色',\n      options: []\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n}\n","import { ref } from 'vue'\nimport PageContent from '@/components/page-content'\n\nexport function usePageSearch() {\n  const PageContentRef = ref<InstanceType<typeof PageContent>>()\n\n  // 重置\n  const handleResetClick = () => {\n    PageContentRef.value?.getPageData()\n  }\n  //搜索\n  const handleQueryClick = (queryInfo: any) => {\n    PageContentRef.value?.getPageData(queryInfo)\n  }\n\n  // 可以看成一个元组\n  return [PageContentRef, handleResetClick, handleQueryClick]\n}\n","\nimport { defineComponent, computed } from 'vue'\n\nimport PageSearch from '@/components/page-search'\nimport PageContent from '@/components/page-content'\nimport PageModal from '@/components/page-modal'\n\nimport { useStore } from '@/store'\n\nimport { searchFormConfig } from './config/search.config'\nimport { contentTableConfig } from './config/content.config'\nimport { modalConfig } from './config/modal.config'\n\nimport { usePageSearch } from '@/hooks/use-page-search'\nimport { usePageModal } from '@/hooks/use-page-modal'\n\nexport default defineComponent({\n  name: 'users',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n  setup(props) {\n    // 拿到重置/搜索按钮的方法\n    const [PageContentRef, handleResetClick, handleQueryClick] = usePageSearch()\n\n    // pageModal相关的hook逻辑\n    // 处理密码的逻辑\n    const newCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = false\n    }\n    const editCallback = () => {\n      const passwordItem = modalConfig.formItems.find(\n        (item) => item.field === 'password'\n      )\n      passwordItem!.isHidden = true\n    }\n\n    // 2.动态添加部门和角色列表\n    const store = useStore()\n    // 让modalConfig变成一个可响应式的对象\n    const modalConfigRef = computed(() => {\n      const departmentItem = modalConfig.formItems.find(\n        (item) => item.field === 'departmentId'\n      )\n      departmentItem!.options = store.state.entireDepartment.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      const roleItem = modalConfig.formItems.find(\n        (item) => item.field === 'roleId'\n      )\n      roleItem!.options = store.state.entireRole.map((item) => {\n        return { title: item.name, value: item.id }\n      })\n      return modalConfig\n    })\n    // 3.调用hook获取公共变量和函数\n    const [pageModalRef, defaultInfo, handleNewData, handleEditData] =\n      usePageModal(newCallback, editCallback)\n\n    return {\n      PageContentRef,\n      searchFormConfig,\n      contentTableConfig,\n      handleResetClick,\n      handleQueryClick,\n      modalConfigRef,\n      handleNewData,\n      handleEditData,\n      pageModalRef,\n      defaultInfo\n    }\n  }\n})\n","import { render } from \"./user.vue?vue&type=template&id=5bb8b443\"\nimport script from \"./user.vue?vue&type=script&lang=ts\"\nexport * from \"./user.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}